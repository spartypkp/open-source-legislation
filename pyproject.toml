[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "open-source-legislation"
version = "0.1.0"
description = "Web scrapers for open source legislation data - democratizing access to global legislative data"
authors = [
    {name = "Open Source Legislation Team", email = "contact@example.com"}
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["legislation", "legal", "scraping", "government", "law", "data"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Legal Industry",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # Core web scraping
    "beautifulsoup4>=4.12.2",
    "requests>=2.32.3",
    "selenium>=4.33.0",
    "lxml>=5.4.0",
    
    # Data modeling and validation
    "pydantic>=2.11.5",
    
    # AI/LLM integration
    "openai>=1.82.1",
    "instructor>=1.8.3",
    "anthropic>=0.52.1",
    "tiktoken>=0.5.1",
    
    # Database
    "supabase>=2.15.2",
    "psycopg>=3.2.9",
    "psycopg2-binary>=2.9.10",
    
    # Configuration and environment
    "python-dotenv>=1.1.0",
    
    # HTTP clients
    "httpx>=0.28.1",
    "aiohttp>=3.12.6",
    
    # CLI tools
    "typer>=0.16.0",
    "click>=8.2.1",
    "rich>=13.9.4",
    
    # Utilities
    "tqdm>=4.66.1",
    "tenacity>=9.1.2",
    "python-dateutil>=2.9.0.post0",
    
    # Data processing
    "numpy>=2.2.6",
    "matplotlib>=3.10.3",
    
    # Markdown processing
    "markdown-it-py>=3.0.0",
    
    # Template engine
    "Jinja2>=3.1.6",
    
    # Async support
    "anyio>=3.7.1",
    "trio>=0.30.0",
    "trio-websocket>=0.12.2",
    
    # JSON Web Tokens
    "PyJWT>=2.10.1",
    
    # Regex
    "regex>=2023.10.3",
    
    # Socks proxy support
    "PySocks>=1.7.1",
    
    # Websockets
    "websockets>=14.2",
    "websocket-client>=1.8.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.3.5",
    "pytest-mock>=3.14.1",
    
    # Code formatting and linting
    "black",
    "isort",
    "flake8",
    
    # Type checking
    "mypy",
    "types-requests",
    "types-beautifulsoup4",
]

scraping = [
    # Additional scraping tools for specific use cases
    "selenium-wire",
    "undetected-chromedriver",
    "fake-useragent",
]

analysis = [
    # Additional data analysis tools
    "pandas",
    "plotly",
    "jupyter",
    "ipykernel",
]

docs = [
    # Documentation generation
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings",
]

[project.urls]
Homepage = "https://github.com/spartypkp/open-source-legislation"
Repository = "https://github.com/spartypkp/open-source-legislation"
Documentation = "https://github.com/spartypkp/open-source-legislation/blob/main/README.md"
"Bug Reports" = "https://github.com/spartypkp/open-source-legislation/issues"

[project.scripts]
osl-scrape = "src.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-dir]
"" = "."

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true 